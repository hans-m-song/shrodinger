# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PlaybookRun implements ActiveRecord {
  version: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
  playbookRunId: Int!
  playbookId: Int!
  playbookVersion: Int!
  status: PlaybookRunStatus!
  startedAt: BigInt
  completedAt: BigInt
  playbook: Playbook!
  playbookRunLogs(limit: Int = 10, offset: Int = 0, sequence: Range): [PlaybookRunLog!]!
}

interface ActiveRecord {
  version: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

enum PlaybookRunStatus {
  Pending
  Running
  Completed
  Failed
}

input Range {
  from: Int
  to: Int
}

type Playbook implements ActiveRecord {
  version: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
  playbookId: Int!
  active: Boolean!
  filepath: String!
  playbookRuns(limit: Int = 10, offset: Int = 0, status: PlaybookRunStatus, startedAt: Range, completedAt: Range): [PlaybookRun!]!
}

type PlaybookRunLog {
  playbookRunId: Int!
  sequence: Int!
  contents: JSON!
  playbookRun: PlaybookRun!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Query {
  playbooks(version: Range, createdAt: Range, updatedAt: Range, limit: Int = 10, offset: Int = 0, active: Boolean, filepath: String): [Playbook!]!
  playbookRuns(limit: Int = 10, offset: Int = 0, playbookId: Int, status: PlaybookRunStatus, startedAt: Range, completedAt: Range): [PlaybookRun!]!
  playbookRunLogs(limit: Int = 10, offset: Int = 0, playbookRunId: Int!, sequence: Range): [PlaybookRunLog!]!
}

type Mutation {
  updatePlaybook(playbookId: Int!, active: Boolean!): Playbook!
  createPlaybookRun(playbookId: Int!, playbookVersion: Int!): PlaybookRun!
  deletePlaybookRun(playbookRunId: Int!): PlaybookRun
}