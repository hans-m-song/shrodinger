/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplatImport } from './routes/$'
import { Route as PlaybooksIndexImport } from './routes/playbooks/index'
import { Route as PlaybooksPlaybookIdIndexImport } from './routes/playbooks/$playbookId/index'
import { Route as PlaybooksPlaybookIdRunsPlaybookRunIdImport } from './routes/playbooks/$playbookId/runs/$playbookRunId'

// Create/Update Routes

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const PlaybooksIndexRoute = PlaybooksIndexImport.update({
  id: '/playbooks/',
  path: '/playbooks/',
  getParentRoute: () => rootRoute,
} as any)

const PlaybooksPlaybookIdIndexRoute = PlaybooksPlaybookIdIndexImport.update({
  id: '/playbooks/$playbookId/',
  path: '/playbooks/$playbookId/',
  getParentRoute: () => rootRoute,
} as any)

const PlaybooksPlaybookIdRunsPlaybookRunIdRoute =
  PlaybooksPlaybookIdRunsPlaybookRunIdImport.update({
    id: '/playbooks/$playbookId/runs/$playbookRunId',
    path: '/playbooks/$playbookId/runs/$playbookRunId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/playbooks/': {
      id: '/playbooks/'
      path: '/playbooks'
      fullPath: '/playbooks'
      preLoaderRoute: typeof PlaybooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/playbooks/$playbookId/': {
      id: '/playbooks/$playbookId/'
      path: '/playbooks/$playbookId'
      fullPath: '/playbooks/$playbookId'
      preLoaderRoute: typeof PlaybooksPlaybookIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/playbooks/$playbookId/runs/$playbookRunId': {
      id: '/playbooks/$playbookId/runs/$playbookRunId'
      path: '/playbooks/$playbookId/runs/$playbookRunId'
      fullPath: '/playbooks/$playbookId/runs/$playbookRunId'
      preLoaderRoute: typeof PlaybooksPlaybookIdRunsPlaybookRunIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$': typeof SplatRoute
  '/playbooks': typeof PlaybooksIndexRoute
  '/playbooks/$playbookId': typeof PlaybooksPlaybookIdIndexRoute
  '/playbooks/$playbookId/runs/$playbookRunId': typeof PlaybooksPlaybookIdRunsPlaybookRunIdRoute
}

export interface FileRoutesByTo {
  '/$': typeof SplatRoute
  '/playbooks': typeof PlaybooksIndexRoute
  '/playbooks/$playbookId': typeof PlaybooksPlaybookIdIndexRoute
  '/playbooks/$playbookId/runs/$playbookRunId': typeof PlaybooksPlaybookIdRunsPlaybookRunIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$': typeof SplatRoute
  '/playbooks/': typeof PlaybooksIndexRoute
  '/playbooks/$playbookId/': typeof PlaybooksPlaybookIdIndexRoute
  '/playbooks/$playbookId/runs/$playbookRunId': typeof PlaybooksPlaybookIdRunsPlaybookRunIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$'
    | '/playbooks'
    | '/playbooks/$playbookId'
    | '/playbooks/$playbookId/runs/$playbookRunId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$'
    | '/playbooks'
    | '/playbooks/$playbookId'
    | '/playbooks/$playbookId/runs/$playbookRunId'
  id:
    | '__root__'
    | '/$'
    | '/playbooks/'
    | '/playbooks/$playbookId/'
    | '/playbooks/$playbookId/runs/$playbookRunId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SplatRoute: typeof SplatRoute
  PlaybooksIndexRoute: typeof PlaybooksIndexRoute
  PlaybooksPlaybookIdIndexRoute: typeof PlaybooksPlaybookIdIndexRoute
  PlaybooksPlaybookIdRunsPlaybookRunIdRoute: typeof PlaybooksPlaybookIdRunsPlaybookRunIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  SplatRoute: SplatRoute,
  PlaybooksIndexRoute: PlaybooksIndexRoute,
  PlaybooksPlaybookIdIndexRoute: PlaybooksPlaybookIdIndexRoute,
  PlaybooksPlaybookIdRunsPlaybookRunIdRoute:
    PlaybooksPlaybookIdRunsPlaybookRunIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/playbooks/",
        "/playbooks/$playbookId/",
        "/playbooks/$playbookId/runs/$playbookRunId"
      ]
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/playbooks/": {
      "filePath": "playbooks/index.tsx"
    },
    "/playbooks/$playbookId/": {
      "filePath": "playbooks/$playbookId/index.tsx"
    },
    "/playbooks/$playbookId/runs/$playbookRunId": {
      "filePath": "playbooks/$playbookId/runs/$playbookRunId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
